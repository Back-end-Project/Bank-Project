plugins {
	id 'org.springframework.boot' version '3.2.7'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'java'
	id 'jacoco'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
	testLogging {
		events "passed", "skipped", "failed"
	}
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required.set(true)
		csv.required.set(false)
		html.outputLocation.set(file("${buildDir}/jacocoHtml"))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.1
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification

tasks.withType(Test) {
	ignoreFailures = true
}